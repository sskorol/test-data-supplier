plugins {
    id "java-library"
    id "java"
    id "jacoco"
    id "maven-publish"
    id "signing"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id "org.sonarqube" version "3.0"
    id "net.researchgate.release" version "2.8.1"
    id "com.ferranpons.twitterplugin" version "1.1.0"
    id "com.github.ben-manes.versions" version "0.39.0"
}

group = "io.github.sskorol"
version = project['version']
description = "Test Data Supplier is an extended version of common TestNG DataProvider."

ext {
    gradleScriptDir = "${rootProject.projectDir}/gradle".toString()
    projectUrl = "https://github.com/sskorol/test-data-supplier"
    moduleName = 'io.github.sskorol.testdatasupplier'

    aspectjVersion = '1.9.7'
    jacksonVersion = '2.13.1'
    lombokVersion = '1.18.22'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    agent
}

dependencies {
    agent("org.aspectj:aspectjweaver:${aspectjVersion}")
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    api("org.jooq:joor:0.9.14")
    api("org.testng:testng:7.4.0")
    api('one.util:streamex:0.8.1')
    api("io.vavr:vavr:0.10.4")
    api("org.aspectj:aspectjrt:${aspectjVersion}")
    // Don't update to 0.9.12 due to bugs
    api("org.reflections:reflections:0.9.11")
    api("org.apache.commons:commons-csv:1.9.0")
    api("com.google.code.gson:gson:2.8.9")
    api("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}")
    api("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    api("com.creditdatamw.labs:zerocell-core:0.5.1")
    testImplementation("org.assertj:assertj-core:3.11.1")
}

if (project.hasProperty('release')) {
    apply from: "${gradleScriptDir}/maven-publish.gradle"
}

jacoco.toolVersion = "0.8.7"
jacocoTestReport {
    reports {
        xml.required = true
        xml.outputLocation = file("${buildDir}/reports/jacoco/jacoco.xml")
        html.outputLocation = file("${buildDir}/reports/jacoco")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "io/github/sskorol/core/**/*Aspect.class",
                    "io/github/sskorol/core/**/*Interceptor.class"
            ])
        }))
    }
}

tasks.named('wrapper') {
    gradleVersion = '7.3.3'
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '-Xlint:deprecation'
        ]
        classpath = files()
    }
}

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
                '-Xlint:deprecation',
        ]
        classpath = files()
    }
}

test {
    testLogging {
        events "skipped", "failed"
        exceptionFormat "full"
    }

    useTestNG() {
        suites 'src/test/resources/smoke-suite.xml'
    }

    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
                "-javaagent:${configurations.agent.singleFile}",
                '--module-path', classpath.asPath,
                '--add-modules', 'ALL-MODULE-PATH',
                '--add-opens', 'io.github.sskorol.testdatasupplier/io.github.sskorol.testcases=org.testng',
                '--add-opens', 'io.github.sskorol.testdatasupplier/io.github.sskorol.listeners=org.testng',
                '--add-opens', 'io.github.sskorol.testdatasupplier/io.github.sskorol.testcases=org.jooq.joor',
                '--add-opens', 'io.github.sskorol.testdatasupplier/io.github.sskorol.entities=org.jooq.joor',
                '--add-opens', 'io.github.sskorol.testdatasupplier/io.github.sskorol.entities=zerocell.core',
                '--add-opens', 'io.github.sskorol.testdatasupplier/io.github.sskorol.entities=com.fasterxml.jackson.databind',
                '--add-opens', 'io.github.sskorol.testdatasupplier/io.github.sskorol.datasuppliers=org.jooq.joor',
                '--add-opens', 'io.github.sskorol.testdatasupplier/io.github.sskorol.datasuppliers=org.testng',
                '--add-opens', 'java.base/java.util=one.util.streamex',
                '--add-opens', 'java.base/java.util.stream=one.util.streamex',
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.classesDirectory, sourceSets.test.output.resourcesDir).asPath
        ]
        classpath = files()
    }
}
